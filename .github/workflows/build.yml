name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Install dependecies on OS-X
      if: matrix.os == 'macOS-latest'
      working-directory: ${{runner.home}}
      run: |
        brew update
        brew install boost
        brew install tbb
        wget http://scip.zib.de/download/release/scipoptsuite-6.0.2.tgz
        tar xf ./scipoptsuite-6.0.2.tgz
        mkdir ./scipoptsuite-6.0.2/build
        cd ./scipoptsuite-6.0.2/build
        cmake .. -DZIMPL=off
        make -j4
        sudo make install
      # wget http://scip.zib.de/download/release/SCIPOptSuite-6.0.2-Darwin-no-Ipopt.sh
      # chmod +x SCIPOptSuite-6.0.2-Darwin-no-Ipopt.sh
      # sudo ./SCIPOptSuite-6.0.2-Darwin-no-Ipopt.sh --prefix=/usr/local --skip-license

    - name: Install dependecies on ubuntu
      if: matrix.os == 'ubuntu-latest'
      working-directory: ${{runner.home}}
      run: |
        sudo apt-get update
        echo $BOOST_ROOT
        echo $Boost_ROOT
        sudo apt-get install libtbb2 gfortran libboost-dev libboost-iostreams-dev libboost-program-options-dev libboost-serialization-dev
        wget http://scip.zib.de/download/release/SCIPOptSuite-6.0.2-Linux.deb
        sudo apt-get install -f ./SCIPOptSuite-6.0.2-Linux.deb

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSOPLEX=off

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE -- VERBOSE=true -j2

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE --verbose